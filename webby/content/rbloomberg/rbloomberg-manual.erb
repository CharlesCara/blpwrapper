---
title:      RBloomberg Manual
author:     Ana Nelson
created_at: 2009-01-30 13:08:32.468894 +00:00
dirty: true
filter:
  - erb
---

\tableofcontents

\section{About RBloomberg} % (fold)
\label{sec:about}

RBloomberg is an R package which handles fetching data from the Bloomberg financial data application. RBloomberg was written by Robert Sams, see the package README for additional contributors and acknowledgements. RBloomberg is released under a GPL open source license.

This documentation refers to RBloomberg version <%= r_project_version %>.

To download the latest version of this document, please visit the \href{http://findata.org/rbloomberg}{RBloomberg home page}.

% section about (end)

\section{Installation and Requirements} % (fold)
\label{sec:installation_and_requirements}

\subsection{Installation} % (fold)
\label{sub:installation}

RBloomberg will only work on a Bloomberg workstation. RBloomberg uses the Java Version 3 API, and depends on the rJava package. Java must also be installed.

To install RBloomberg:

\begin{verbatim}
  install.packages("RBloomberg", repos="http://r.findata.org")
\end{verbatim}

% subsection installation (end)

\subsection{Hello, World}

Once you have RBloomberg installed, load the library just like any other. The blpConnect() function initializes a connection to Bloomberg and returns a connection object which will be used in all subsequent calls. The bdp() function fetches a basic data call.
<%= gorgl("examples/hello-world.R") %>

The result of running these three commands should be something like this:
<%= gorgl("examples/hello-world.Rout") %>


\section{Current Data} 

This section covers getting current, i.e. non-historical, data from Bloomberg. This may be live (or delayed as per your availability) market data, or static descriptive data. All such data is called using the bdp() function, as defined below:

<%= gorgl("../rbloomberg/R/blp.R", "bdp-definition") %>

<%= gorgl("examples/blp.R") %>
<%= gorgl("examples/blp.Rout") %>

\section{Using Overrides}

The Bloomberg API allows you to make certain overrides to change the value that a function returns. We give a few examples here, to determine whether a field you wish to request can be overridden, consult the FLDS screen in your Bloomberg terminal (look for What Overrides Me).

Note that dates must be passed as strings in the form ``YYYYMMDD''. If you pass an invalid override field, or one that doesn't apply to the main field you are requesting, this will be silently ignored. So, make sure you know that your request is valid before you count on the returned value being correct. This is a feature rather than a bug since it makes it possible to specify override fields which only apply to 1 field requested. So, you can ask for CRNCY\_ADJ\_PX\_LAST and NAME in the same request, and you don't get an error saying that EQY\_FUND\_CRNCY doesn't apply to the NAME field.


\section{Setting Options}


\section{Bulk Data}

<%= gorgl("../rbloomberg/R/blp.R", "bds-definition") %>

<%= gorgl("examples/bls.R") %>
<%= gorgl("examples/bls.Rout") %>

\section{Historical Data}

<%= gorgl("../rbloomberg/R/blp.R", "bdh-definition") %>

<%= gorgl("examples/blh.R") %>
<%= gorgl("examples/blh.Rout") %>

\section{Tick Data}

<%= gorgl("../rbloomberg/R/blp.R", "tick-definition") %>

<%= gorgl("examples/tick.R") %>
<%= gorgl("examples/tick.Rout") %>

\section{Bar Data}

<%= gorgl("../rbloomberg/R/blp.R", "bar-definition") %>

<%= gorgl("examples/bar.R") %>
<%= gorgl("examples/bar.Rout") %>

\section{Field Lookup}

\section{Troubleshooting}

\subsection{Request Not Returning Data}

If you are making a request using the blp() function and not getting data back, or getting an error message, here are some things to try.

\subsubsection{Check Your Fields Somewhere Else}

You might have a typo in your ticker or in the fields you are requesting, or the fields might not be applicable to the ticker. Try making the same request from within your Bloomberg terminal. The FLDS page gives you access to all the same fields from RBloomberg, so you can re-create the request you are trying to make (for one security at a time). You could also use the Excel API to double-check your request.

Also, check any override fields you are using to make sure they don't cause problems.

\subsection{Troubleshooting Strategies}

\subsubsection{Where Is The Problem?}

If you are having a problem with RBloomberg, there's a number of places this issue could originate.
\begin{itemize}
\item{The Bloomberg API}
\item{The COM server, which links R with the Bloomberg API.}
\item{R itself (unlikely)}
\item{Your request to RBloomberg}
\item{RBloomberg itself}
\end{itemize}


\subsubsection{Look For Error Messages}

The Bloomberg API writes error messages to a log file located in C blp API and called bbcomm or bbcomm.log. Check here for clues as to what is going wrong. Also, there is free software called DebugView available from Microsoft which can help to detect error messages. You need to have this software running, then make the request which is causing the problem. You should see debugging information appear in the DebugView console as you work.


